/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Car_Manager.view;

import Car_Manager.model.Car;
import Car_Manager.model.Product;
import Car_Manager.model.controller.DataController;
import Car_Manager.model.controller.DataControllerImp;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hungq
 */
public class HomeFrm extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form HomeFrm
     */
    public List<Car> cars = new ArrayList<>();;
    
    private DefaultTableModel tableModelCar;
    
    private DataController dataController;
    
    public HomeFrm() {
        initComponents();
        setLocationRelativeTo(null);
        addButtonGroup();
        addActionListener();
        tableModelCar=(DefaultTableModel) tblCar.getModel();
        dataController=new DataControllerImp();
        loadData();
        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSearchCar = new javax.swing.ButtonGroup();
        buttonGroupSortCar = new javax.swing.ButtonGroup();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtDelCar = new javax.swing.JTextField();
        btnDelCar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        rbSearchByName = new javax.swing.JRadioButton();
        rbSearchByPrice = new javax.swing.JRadioButton();
        rbSearchByColor = new javax.swing.JRadioButton();
        txtSeachCar = new javax.swing.JTextField();
        btnSearchCar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCar = new javax.swing.JTable();
        btnRefreshCar = new javax.swing.JButton();
        btnAddNewCar = new javax.swing.JButton();
        btnEditCar = new javax.swing.JButton();
        btnRemoveCar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        rbSortCarPriceASC = new javax.swing.JRadioButton();
        rbSortCarPriceDESC = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Xe");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Xóa Sản Phẩm Theo ID"));

        btnDelCar.setBackground(new java.awt.Color(153, 153, 255));
        btnDelCar.setText("Xóa");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(txtDelCar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelCar)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDelCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelCar))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm xe"));

        rbSearchByName.setText("Theo Tên");

        rbSearchByPrice.setText("Theo Giá");

        rbSearchByColor.setText("Theo Màu Sắc");

        btnSearchCar.setBackground(new java.awt.Color(153, 255, 255));
        btnSearchCar.setForeground(new java.awt.Color(0, 0, 51));
        btnSearchCar.setText("Tìm Kiếm");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rbSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbSearchByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(txtSeachCar, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(rbSearchByColor, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnSearchCar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSearchByName)
                    .addComponent(rbSearchByPrice)
                    .addComponent(rbSearchByColor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSeachCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchCar))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tblCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Số Xe", "Tên Xe", "Giá Bán (Triệu)", "Trọng Tải (Tấn)", "Số Ghế", "Màu Sắc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCar);

        btnRefreshCar.setText("Làm Mới");

        btnAddNewCar.setText("Thêm");

        btnEditCar.setText("Sửa");

        btnRemoveCar.setText("Xóa");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Sắp xếp danh sách"));

        rbSortCarPriceASC.setText("Tăng Dần Theo Giá");

        rbSortCarPriceDESC.setText("Giảm Dần Theo Giá");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rbSortCarPriceASC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rbSortCarPriceDESC, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbSortCarPriceASC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbSortCarPriceDESC)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(btnRefreshCar)
                .addGap(107, 107, 107)
                .addComponent(btnAddNewCar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(btnEditCar)
                .addGap(124, 124, 124)
                .addComponent(btnRemoveCar)
                .addGap(93, 93, 93))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshCar)
                    .addComponent(btnAddNewCar)
                    .addComponent(btnEditCar)
                    .addComponent(btnRemoveCar))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel2.getAccessibleContext().setAccessibleName("X");

        jTabbedPane4.addTab("Quản Lý Xe", jPanel1);

        jScrollPane1.setViewportView(jTabbedPane1);

        jTabbedPane4.addTab("Quản Lý Đăng Ký", jScrollPane1);

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>
        /* Create and display the form */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrm().setVisible(true);
            }
        });
    }
    private void addButtonGroup(){
        buttonGroupSearchCar.add(rbSearchByColor);
        buttonGroupSearchCar.add(rbSearchByPrice);
        buttonGroupSearchCar.add(rbSearchByName);
        
        buttonGroupSortCar.add(rbSortCarPriceASC);
        buttonGroupSortCar.add(rbSortCarPriceDESC);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewCar;
    private javax.swing.JButton btnDelCar;
    private javax.swing.JButton btnEditCar;
    private javax.swing.JButton btnRefreshCar;
    private javax.swing.JButton btnRemoveCar;
    private javax.swing.JButton btnSearchCar;
    private javax.swing.ButtonGroup buttonGroupSearchCar;
    private javax.swing.ButtonGroup buttonGroupSortCar;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JRadioButton rbSearchByColor;
    private javax.swing.JRadioButton rbSearchByName;
    private javax.swing.JRadioButton rbSearchByPrice;
    private javax.swing.JRadioButton rbSortCarPriceASC;
    private javax.swing.JRadioButton rbSortCarPriceDESC;
    private javax.swing.JTable tblCar;
    private javax.swing.JTextField txtDelCar;
    private javax.swing.JTextField txtSeachCar;
    // End of variables declaration//GEN-END:variables


    private void addActionListener() {
        btnAddNewCar.addActionListener(this);
        btnEditCar.addActionListener(this);
        btnRefreshCar.addActionListener(this);
        btnRemoveCar.addActionListener(this);
        btnSearchCar.addActionListener(this);
        btnDelCar.addActionListener(this);
        
        rbSearchByColor.addActionListener(this);
        rbSearchByName.addActionListener(this);
        rbSearchByPrice.addActionListener(this);
        rbSortCarPriceASC.addActionListener(this);
        rbSortCarPriceDESC.addActionListener(this);
    }
    public void addCarCallBack(Car car){
        cars.add(car);
        showCar(car);
        saveData();
    }
    @Override
    public void actionPerformed(ActionEvent e) {
        // Thực hiện các hành động
        var obj = e.getSource();
        if (obj.equals(btnAddNewCar)) {
            // Bắt event btn Thêm Xe
            AddCar_Dialog addCar_Dialog = new AddCar_Dialog(this, rootPaneCheckingEnabled);
            addCar_Dialog.setVisible(true);
        }else if (obj.equals(btnRefreshCar)) {
            refreshCar();
        }else if (obj.equals(btnRemoveCar)) {
            RemoveCar();
        }else if (obj.equals(rbSortCarPriceASC) || obj.equals(rbSortCarPriceDESC)) {
            sortCars(obj);
        }else if (obj.equals(btnDelCar) ) {
            delCarByID();
        }else if (obj.equals(btnSearchCar)) {
            searchCar();
        }else if (obj.equals(btnEditCar)) {
            editCar();
        }
    }

    private void showCar(Car car) {
        Object[] rowObjects=new Object[]{
            car.getProduct_id(),car.getProduct_name(),
            car.getProduct_price(),car.getCar_tonnage(),
            car.getCar_seats(),car.getCar_color()
        };
        tableModelCar.addRow(rowObjects);
    }

    private void loadData() {
        cars = dataController.<Car>readDataFromFile(DataController.Car_File);
    }

    private void showData() {
        showCars();
    }

    private void showCars() {
        tableModelCar.setRowCount(0);//delete toan bo
        for (Product car : cars) {
            showCar((Car) car);
        }
    }

    private void saveData() {
        dataController.<Car>writeToFile(cars,DataController.Car_File );
    }
    
    private void RemoveCar() {
        int selectedIndex = tblCar.getSelectedRow();
        if (selectedIndex > -1) {
            var msg = "Bạn có chắc chắn muốn xóa bản ghi này không?";
            int confirm = JOptionPane.showConfirmDialog(rootPane, msg);
            if (confirm == JOptionPane.YES_OPTION) { // or OK_OPTION
                cars.remove(selectedIndex);
                tableModelCar.removeRow(selectedIndex);
                dataController.<Car>writeToFile(cars,
                        DataController.Car_File);
            }
        } else {
            var msg = "Vui lòng chọn 1 bản ghi để xóa!";
            showDialogMessage(msg);
        }
    }
    private void showDialogMessage(String msg) {
        JOptionPane.showMessageDialog(rootPane, msg);
    }
    public String[] getID() {
        String[] idStrings=new String[tblCar.getRowCount()];
        for (int i = 0; i < idStrings.length; i++) {
            idStrings[i] = tableModelCar.getValueAt(i, 0).toString();
        }
        return idStrings;
    }
    private void sortCars(Object obj) {
        if (obj.equals(rbSortCarPriceASC)){
            dataController.sortByPriceASC(cars);
        }else if (obj.equals(rbSortCarPriceDESC)) {
            dataController.sortByPriceDESC(cars);
        }
        showCars();
    }
    private void editCar() {
        int selectedIndex = tblCar.getSelectedRow();
            if (selectedIndex > -1) {
                   Car car = cars.get(selectedIndex);
                   EditCar_Dialog editCar_Dialog = 
                           new EditCar_Dialog(this, rootPaneCheckingEnabled, car);
                   editCar_Dialog.setVisible(true);
            } else {
                var msg = "Vui lòng chọn 1 bản ghi để xóa!";
                    showDialogMessage(msg);
            }        
     }     

    public void editCarCallback(Car car) {
        int selectedIndex = tblCar.getSelectedRow();
            cars.set(selectedIndex, car);
            tableModelCar.removeRow(selectedIndex);
            Object[] row = new Object[]{
                car.getProduct_id(),car.getProduct_name(),car.getProduct_price(),
                car.getCar_tonnage(), car.getCar_seats(),car.getCar_color()
            };
            tableModelCar.insertRow(selectedIndex, row);
            saveData();    
    }    
    private void delCarByID() {
        var sId=txtDelCar.getText();
        var index=-1;
        for (int i=0;i<cars.size();i++) {
            if (cars.get(i).getProduct_id().compareTo(sId)==0) {
                index=i;
                break;
            }
        }
        if (index>=0) {
            var msg = "Bạn có chắc chắn muốn xóa bản ghi này không?";
            int confirm = JOptionPane.showConfirmDialog(rootPane, msg);
            if (confirm == JOptionPane.YES_OPTION) { // or OK_OPTION
                cars.remove(index);
                tableModelCar.removeRow(index);
                dataController.<Car>writeToFile(cars,
                        DataController.Car_File);
            }
            saveData();
        }
        else{
            var msg = "Không tồn tại ID nhập!";
            showDialogMessage(msg);
        }
    }

    private void searchCar() {
        var key=txtSeachCar.getText();
        if (key.isEmpty()) {
            var msg="Vui lòng nhập ký tự cần tìm !!";
            showDialogMessage(msg);
        }
        else{
            if (rbSearchByColor.isSelected()) {
                var result=dataController.searchProductByColor(cars, key);
                cars.clear();
                cars.addAll(result);
                if (!cars.isEmpty()) {
                    showCars();
                    var msg="Tìm thấy"+cars.size()+" Kết quả";
                    showDialogMessage(msg);
                }else{
                    cars.clear();
                    showCars();
                    var msg="Không tìm thấy kết quả nào";
                    showDialogMessage(msg);
                }
            }
            else if (rbSearchByName.isSelected()) {
                var result=dataController.searchProductByName(cars, key);
                cars.clear();
                cars.addAll(result);
                if (!cars.isEmpty()) {
                    showCars();
                    var msg="Tìm thấy"+cars.size()+" Kết quả";
                    showDialogMessage(msg);
                }else{
                    cars.clear();
                    showCars();
                    var msg="Không tìm thấy kết quả nào";
                    showDialogMessage(msg);
                }
            }
            else if (rbSearchByPrice.isSelected()) {
                float key_F=Float.parseFloat(key);
                var result=dataController.searchProductByPrice(cars, key_F);
                cars.clear();
                cars.addAll(result);
                if (!cars.isEmpty()) {
                    showCars();
                    var msg="Tìm thấy"+cars.size()+" Kết quả";
                    showDialogMessage(msg);
                }else{
                    cars.clear();
                    showCars();
                    var msg="Không tìm thấy kết quả nào";
                    showDialogMessage(msg);
                }
            }
            else{
                var msg="Không tìm thấy kết quả";
                showDialogMessage(msg);
            }
        }
    }

    private void refreshCar() {
        cars.clear();
        cars.addAll(dataController.<Car>readDataFromFile(DataController.Car_File));
        showCars();
    }
}
